// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config14_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
input   ap_ce;

reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;

reg   [7:0] p_read25_reg_181;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln813_fu_114_p2;
reg   [7:0] add_ln813_reg_187;
wire   [7:0] add_ln813_16_fu_120_p2;
reg   [7:0] add_ln813_16_reg_193;
wire  signed [7:0] sext_ln1270_fu_58_p0;
wire    ap_block_pp0_stage0;
wire  signed [7:0] p_shl_fu_62_p1;
wire  signed [10:0] sext_ln1270_fu_58_p1;
wire   [10:0] p_shl_fu_62_p3;
wire   [10:0] sub_ln1270_fu_70_p2;
wire  signed [7:0] sext_ln70_fu_86_p0;
wire  signed [7:0] shl_ln_fu_90_p1;
wire   [10:0] shl_ln_fu_90_p3;
wire  signed [10:0] sext_ln70_fu_86_p1;
wire   [10:0] r_V_fu_98_p2;
wire   [7:0] trunc_ln_fu_76_p4;
wire   [7:0] trunc_ln818_s_fu_104_p4;
wire   [8:0] shl_ln1273_4_fu_133_p3;
wire   [10:0] shl_ln1273_s_fu_126_p3;
wire  signed [10:0] sext_ln1273_fu_140_p1;
wire   [10:0] r_V_11_fu_144_p2;
wire   [7:0] add_ln813_17_fu_160_p2;
reg    ap_ce_reg;
reg   [7:0] ap_return_0_int_reg;
reg   [7:0] ap_return_1_int_reg;
reg   [7:0] ap_return_2_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        add_ln813_16_reg_193 <= add_ln813_16_fu_120_p2;
        add_ln813_reg_187 <= add_ln813_fu_114_p2;
        p_read25_reg_181 <= p_read2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= {{r_V_11_fu_144_p2[10:3]}};
        ap_return_1_int_reg <= add_ln813_17_fu_160_p2;
        ap_return_2_int_reg <= add_ln813_reg_187;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = {{r_V_11_fu_144_p2[10:3]}};
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = add_ln813_17_fu_160_p2;
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = add_ln813_reg_187;
    end else begin
        ap_return_2 = 'bx;
    end
end

assign add_ln813_16_fu_120_p2 = (trunc_ln818_s_fu_104_p4 + p_read2);

assign add_ln813_17_fu_160_p2 = (add_ln813_16_reg_193 + add_ln813_reg_187);

assign add_ln813_fu_114_p2 = (trunc_ln_fu_76_p4 + 8'd2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign p_shl_fu_62_p1 = p_read;

assign p_shl_fu_62_p3 = {{p_shl_fu_62_p1}, {3'd0}};

assign r_V_11_fu_144_p2 = ($signed(shl_ln1273_s_fu_126_p3) + $signed(sext_ln1273_fu_140_p1));

assign r_V_fu_98_p2 = ($signed(shl_ln_fu_90_p3) + $signed(sext_ln70_fu_86_p1));

assign sext_ln1270_fu_58_p0 = p_read;

assign sext_ln1270_fu_58_p1 = sext_ln1270_fu_58_p0;

assign sext_ln1273_fu_140_p1 = $signed(shl_ln1273_4_fu_133_p3);

assign sext_ln70_fu_86_p0 = p_read1;

assign sext_ln70_fu_86_p1 = sext_ln70_fu_86_p0;

assign shl_ln1273_4_fu_133_p3 = {{p_read25_reg_181}, {1'd0}};

assign shl_ln1273_s_fu_126_p3 = {{p_read25_reg_181}, {3'd0}};

assign shl_ln_fu_90_p1 = p_read1;

assign shl_ln_fu_90_p3 = {{shl_ln_fu_90_p1}, {3'd0}};

assign sub_ln1270_fu_70_p2 = ($signed(sext_ln1270_fu_58_p1) - $signed(p_shl_fu_62_p3));

assign trunc_ln818_s_fu_104_p4 = {{r_V_fu_98_p2[10:3]}};

assign trunc_ln_fu_76_p4 = {{sub_ln1270_fu_70_p2[10:3]}};

endmodule //myproject_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config14_s
