// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GN_inference_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config8_s (
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        ap_return_0,
        ap_return_1
);


output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;

wire   [4:0] mul_ln1270_fu_77_p1;
wire   [6:0] trunc_ln1273_fu_104_p1;
wire   [9:0] shl_ln1273_1_fu_116_p3;
wire  signed [10:0] sext_ln1273_fu_124_p1;
wire   [10:0] shl_ln_fu_108_p3;
wire   [10:0] r_V_fu_128_p2;
wire   [8:0] shl_ln1273_3_fu_152_p3;
wire   [10:0] shl_ln1273_2_fu_144_p3;
wire  signed [10:0] sext_ln1273_1_fu_160_p1;
wire   [10:0] r_V_1_fu_164_p2;
wire  signed [7:0] sext_ln70_fu_180_p0;
wire  signed [7:0] shl_ln1273_4_fu_184_p1;
wire   [10:0] shl_ln1273_4_fu_184_p3;
wire  signed [10:0] sext_ln70_fu_180_p1;
wire   [10:0] r_V_2_fu_192_p2;
wire   [10:0] mul_ln1270_fu_77_p2;
wire   [7:0] trunc_ln818_2_fu_198_p4;
wire   [7:0] add_ln813_fu_223_p2;
wire   [7:0] trunc_ln818_1_fu_170_p4;
wire   [7:0] trunc_ln818_3_fu_213_p4;
wire   [7:0] add_ln813_2_fu_235_p2;
wire   [7:0] trunc_ln_fu_134_p4;
wire   [7:0] add_ln813_3_fu_241_p2;
wire   [7:0] add_ln813_1_fu_229_p2;

GN_inference_mul_8s_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_8s_5ns_11_1_1_U9(
    .din0(p_read3),
    .din1(mul_ln1270_fu_77_p1),
    .dout(mul_ln1270_fu_77_p2)
);

assign add_ln813_1_fu_229_p2 = (add_ln813_fu_223_p2 + trunc_ln818_1_fu_170_p4);

assign add_ln813_2_fu_235_p2 = ($signed(trunc_ln818_3_fu_213_p4) + $signed(8'd248));

assign add_ln813_3_fu_241_p2 = (add_ln813_2_fu_235_p2 + trunc_ln_fu_134_p4);

assign add_ln813_fu_223_p2 = ($signed(trunc_ln818_2_fu_198_p4) + $signed(8'd248));

assign ap_ready = 1'b1;

assign r_V_1_fu_164_p2 = ($signed(shl_ln1273_2_fu_144_p3) + $signed(sext_ln1273_1_fu_160_p1));

assign r_V_2_fu_192_p2 = ($signed(shl_ln1273_4_fu_184_p3) + $signed(sext_ln70_fu_180_p1));

assign r_V_fu_128_p2 = ($signed(sext_ln1273_fu_124_p1) - $signed(shl_ln_fu_108_p3));

assign sext_ln1273_1_fu_160_p1 = $signed(shl_ln1273_3_fu_152_p3);

assign sext_ln1273_fu_124_p1 = $signed(shl_ln1273_1_fu_116_p3);

assign sext_ln70_fu_180_p1 = sext_ln70_fu_180_p0;

assign shl_ln1273_1_fu_116_p3 = {{p_read}, {2'd0}};

assign shl_ln1273_2_fu_144_p3 = {{p_read1}, {3'd0}};

assign shl_ln1273_3_fu_152_p3 = {{p_read1}, {1'd0}};

assign shl_ln1273_4_fu_184_p3 = {{shl_ln1273_4_fu_184_p1}, {3'd0}};

assign shl_ln_fu_108_p3 = {{trunc_ln1273_fu_104_p1}, {4'd0}};

assign trunc_ln1273_fu_104_p1 = p_read[6:0];

assign trunc_ln818_1_fu_170_p4 = {{r_V_1_fu_164_p2[10:3]}};

assign trunc_ln818_2_fu_198_p4 = {{r_V_2_fu_192_p2[10:3]}};

assign trunc_ln818_3_fu_213_p4 = {{mul_ln1270_fu_77_p2[10:3]}};

assign trunc_ln_fu_134_p4 = {{r_V_fu_128_p2[10:3]}};

assign ap_return_0 = add_ln813_3_fu_241_p2;

assign ap_return_1 = add_ln813_1_fu_229_p2;

assign mul_ln1270_fu_77_p1 = 11'd11;

assign sext_ln70_fu_180_p0 = p_read2;

assign shl_ln1273_4_fu_184_p1 = p_read2;

endmodule //GN_inference_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config8_s
