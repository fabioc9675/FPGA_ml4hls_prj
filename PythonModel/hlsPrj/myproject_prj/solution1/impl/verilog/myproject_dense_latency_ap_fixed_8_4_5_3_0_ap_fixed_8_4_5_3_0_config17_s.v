// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config17_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        ap_return_0,
        ap_return_1,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
input   ap_ce;

reg[7:0] ap_return_0;
reg[7:0] ap_return_1;

wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] trunc_ln_reg_198;
reg   [7:0] trunc_ln818_s_reg_203;
reg   [7:0] trunc_ln818_4_reg_208;
wire   [10:0] grp_fu_56_p1;
wire    ap_block_pp0_stage0;
wire   [10:0] grp_fu_57_p1;
wire  signed [10:0] grp_fu_58_p1;
wire   [16:0] grp_fu_57_p2;
wire   [16:0] grp_fu_56_p2;
wire   [16:0] grp_fu_58_p2;
wire   [7:0] add_ln813_15_fu_166_p2;
wire   [7:0] add_ln813_fu_162_p2;
reg    grp_fu_56_ce;
reg    grp_fu_57_ce;
reg    grp_fu_58_ce;
reg    ap_ce_reg;
reg  signed [7:0] p_read_int_reg;
reg  signed [7:0] p_read1_int_reg;
reg  signed [7:0] p_read2_int_reg;
reg   [7:0] ap_return_0_int_reg;
reg   [7:0] ap_return_1_int_reg;

myproject_mul_8s_11ns_17_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_8s_11ns_17_2_0_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read1_int_reg),
    .din1(grp_fu_56_p1),
    .ce(grp_fu_56_ce),
    .dout(grp_fu_56_p2)
);

myproject_mul_8s_11ns_17_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_8s_11ns_17_2_0_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read_int_reg),
    .din1(grp_fu_57_p1),
    .ce(grp_fu_57_ce),
    .dout(grp_fu_57_p2)
);

myproject_mul_8s_11s_17_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_8s_11s_17_2_0_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read2_int_reg),
    .din1(grp_fu_58_p1),
    .ce(grp_fu_58_ce),
    .dout(grp_fu_58_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= add_ln813_15_fu_166_p2;
        ap_return_1_int_reg <= add_ln813_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read_int_reg <= p_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        trunc_ln818_4_reg_208 <= {{grp_fu_58_p2[16:9]}};
        trunc_ln818_s_reg_203 <= {{grp_fu_56_p2[16:9]}};
        trunc_ln_reg_198 <= {{grp_fu_57_p2[16:9]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = add_ln813_15_fu_166_p2;
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = add_ln813_fu_162_p2;
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_56_ce = 1'b1;
    end else begin
        grp_fu_56_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_57_ce = 1'b1;
    end else begin
        grp_fu_57_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_58_ce = 1'b1;
    end else begin
        grp_fu_58_ce = 1'b0;
    end
end

assign add_ln813_15_fu_166_p2 = ($signed(trunc_ln818_4_reg_208) + $signed(8'd255));

assign add_ln813_fu_162_p2 = (trunc_ln818_s_reg_203 + trunc_ln_reg_198);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign grp_fu_56_p1 = 17'd639;

assign grp_fu_57_p1 = 17'd623;

assign grp_fu_58_p1 = 17'd130375;

endmodule //myproject_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config17_s
