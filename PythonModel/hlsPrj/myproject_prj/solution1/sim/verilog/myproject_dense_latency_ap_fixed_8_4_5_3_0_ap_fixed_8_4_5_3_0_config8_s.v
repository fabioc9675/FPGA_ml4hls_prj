// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config8_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        ap_return_0,
        ap_return_1,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
input   ap_ce;

reg[7:0] ap_return_0;
reg[7:0] ap_return_1;

reg   [7:0] p_read_5_reg_252;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] trunc_ln_reg_258;
reg   [7:0] trunc_ln_reg_258_pp0_iter1_reg;
reg   [7:0] trunc_ln_reg_258_pp0_iter2_reg;
reg   [7:0] trunc_ln_reg_258_pp0_iter3_reg;
wire   [7:0] add_ln813_fu_177_p2;
reg   [7:0] add_ln813_reg_268;
wire   [7:0] add_ln813_1_fu_217_p2;
reg   [7:0] add_ln813_1_reg_273;
reg   [7:0] add_ln813_1_reg_273_pp0_iter2_reg;
reg   [7:0] add_ln813_1_reg_273_pp0_iter3_reg;
reg   [7:0] trunc_ln818_4_reg_278;
wire   [7:0] add_ln813_2_fu_232_p2;
reg   [7:0] add_ln813_2_reg_283;
wire   [4:0] grp_fu_77_p1;
wire    ap_block_pp0_stage0;
wire   [6:0] trunc_ln1273_fu_104_p1;
wire   [9:0] shl_ln1273_1_fu_116_p3;
wire  signed [10:0] sext_ln1273_fu_124_p1;
wire   [10:0] shl_ln_fu_108_p3;
wire   [10:0] r_V_fu_128_p2;
wire  signed [7:0] sext_ln70_fu_144_p0;
wire  signed [7:0] shl_ln1273_4_fu_148_p1;
wire   [10:0] shl_ln1273_4_fu_148_p3;
wire  signed [10:0] sext_ln70_fu_144_p1;
wire   [10:0] r_V_2_fu_156_p2;
wire   [7:0] trunc_ln818_3_fu_162_p4;
wire   [8:0] shl_ln1273_3_fu_190_p3;
wire   [10:0] shl_ln1273_2_fu_183_p3;
wire  signed [10:0] sext_ln1273_1_fu_197_p1;
wire   [10:0] r_V_1_fu_201_p2;
wire   [7:0] trunc_ln818_2_fu_207_p4;
wire   [10:0] grp_fu_77_p2;
wire   [7:0] add_ln813_3_fu_237_p2;
reg    grp_fu_77_ce;
reg    ap_ce_reg;
reg   [7:0] p_read_int_reg;
reg   [7:0] p_read1_int_reg;
reg   [7:0] p_read2_int_reg;
reg  signed [7:0] p_read3_int_reg;
reg   [7:0] ap_return_0_int_reg;
reg   [7:0] ap_return_1_int_reg;

myproject_mul_8s_5ns_11_3_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_8s_5ns_11_3_0_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read3_int_reg),
    .din1(grp_fu_77_p1),
    .ce(grp_fu_77_ce),
    .dout(grp_fu_77_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln813_1_reg_273 <= add_ln813_1_fu_217_p2;
        add_ln813_1_reg_273_pp0_iter2_reg <= add_ln813_1_reg_273;
        add_ln813_1_reg_273_pp0_iter3_reg <= add_ln813_1_reg_273_pp0_iter2_reg;
        add_ln813_2_reg_283 <= add_ln813_2_fu_232_p2;
        add_ln813_reg_268 <= add_ln813_fu_177_p2;
        p_read_5_reg_252 <= p_read1_int_reg;
        trunc_ln818_4_reg_278 <= {{grp_fu_77_p2[10:3]}};
        trunc_ln_reg_258 <= {{r_V_fu_128_p2[10:3]}};
        trunc_ln_reg_258_pp0_iter1_reg <= trunc_ln_reg_258;
        trunc_ln_reg_258_pp0_iter2_reg <= trunc_ln_reg_258_pp0_iter1_reg;
        trunc_ln_reg_258_pp0_iter3_reg <= trunc_ln_reg_258_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= add_ln813_3_fu_237_p2;
        ap_return_1_int_reg <= add_ln813_1_reg_273_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read_int_reg <= p_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = add_ln813_3_fu_237_p2;
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = add_ln813_1_reg_273_pp0_iter3_reg;
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_77_ce = 1'b1;
    end else begin
        grp_fu_77_ce = 1'b0;
    end
end

assign add_ln813_1_fu_217_p2 = (add_ln813_reg_268 + trunc_ln818_2_fu_207_p4);

assign add_ln813_2_fu_232_p2 = ($signed(trunc_ln818_4_reg_278) + $signed(8'd248));

assign add_ln813_3_fu_237_p2 = (add_ln813_2_reg_283 + trunc_ln_reg_258_pp0_iter3_reg);

assign add_ln813_fu_177_p2 = ($signed(trunc_ln818_3_fu_162_p4) + $signed(8'd248));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign grp_fu_77_p1 = 11'd11;

assign r_V_1_fu_201_p2 = ($signed(shl_ln1273_2_fu_183_p3) + $signed(sext_ln1273_1_fu_197_p1));

assign r_V_2_fu_156_p2 = ($signed(shl_ln1273_4_fu_148_p3) + $signed(sext_ln70_fu_144_p1));

assign r_V_fu_128_p2 = ($signed(sext_ln1273_fu_124_p1) - $signed(shl_ln_fu_108_p3));

assign sext_ln1273_1_fu_197_p1 = $signed(shl_ln1273_3_fu_190_p3);

assign sext_ln1273_fu_124_p1 = $signed(shl_ln1273_1_fu_116_p3);

assign sext_ln70_fu_144_p0 = p_read2_int_reg;

assign sext_ln70_fu_144_p1 = sext_ln70_fu_144_p0;

assign shl_ln1273_1_fu_116_p3 = {{p_read_int_reg}, {2'd0}};

assign shl_ln1273_2_fu_183_p3 = {{p_read_5_reg_252}, {3'd0}};

assign shl_ln1273_3_fu_190_p3 = {{p_read_5_reg_252}, {1'd0}};

assign shl_ln1273_4_fu_148_p1 = p_read2_int_reg;

assign shl_ln1273_4_fu_148_p3 = {{shl_ln1273_4_fu_148_p1}, {3'd0}};

assign shl_ln_fu_108_p3 = {{trunc_ln1273_fu_104_p1}, {4'd0}};

assign trunc_ln1273_fu_104_p1 = p_read_int_reg[6:0];

assign trunc_ln818_2_fu_207_p4 = {{r_V_1_fu_201_p2[10:3]}};

assign trunc_ln818_3_fu_162_p4 = {{r_V_2_fu_156_p2[10:3]}};

endmodule //myproject_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config8_s
