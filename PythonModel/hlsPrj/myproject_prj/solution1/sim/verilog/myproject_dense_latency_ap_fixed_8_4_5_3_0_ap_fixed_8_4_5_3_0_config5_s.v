// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config5_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
input   ap_ce;

reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;
reg[7:0] ap_return_3;

reg  signed [7:0] p_read_8_reg_511;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg  signed [7:0] p_read27_reg_518;
wire   [7:0] add_ln813_fu_325_p2;
reg   [7:0] add_ln813_reg_529;
reg   [7:0] add_ln813_reg_529_pp0_iter1_reg;
reg   [7:0] add_ln813_reg_529_pp0_iter2_reg;
reg   [7:0] add_ln813_reg_529_pp0_iter3_reg;
wire   [7:0] add_ln813_8_fu_331_p2;
reg   [7:0] add_ln813_8_reg_534;
wire   [7:0] add_ln813_9_fu_337_p2;
reg   [7:0] add_ln813_9_reg_539;
wire   [7:0] add_ln813_11_fu_343_p2;
reg   [7:0] add_ln813_11_reg_544;
reg   [7:0] add_ln813_11_reg_544_pp0_iter1_reg;
wire   [7:0] add_ln813_12_fu_349_p2;
reg   [7:0] add_ln813_12_reg_549;
reg   [7:0] trunc_ln818_7_reg_554;
wire   [7:0] add_ln813_6_fu_448_p2;
reg   [7:0] add_ln813_6_reg_559;
wire   [7:0] add_ln813_10_fu_454_p2;
reg   [7:0] add_ln813_10_reg_564;
reg   [7:0] add_ln813_10_reg_564_pp0_iter2_reg;
reg   [7:0] add_ln813_10_reg_564_pp0_iter3_reg;
wire   [7:0] add_ln813_13_fu_458_p2;
reg   [7:0] add_ln813_13_reg_569;
reg   [7:0] trunc_ln818_8_reg_574;
wire   [7:0] add_ln813_7_fu_473_p2;
reg   [7:0] add_ln813_7_reg_579;
reg   [7:0] add_ln813_7_reg_579_pp0_iter3_reg;
wire   [7:0] add_ln813_14_fu_477_p2;
reg   [7:0] add_ln813_14_reg_584;
reg   [7:0] add_ln813_14_reg_584_pp0_iter3_reg;
wire   [7:0] add_ln813_4_fu_481_p2;
reg   [7:0] add_ln813_4_reg_589;
wire  signed [4:0] grp_fu_97_p1;
wire    ap_block_pp0_stage0;
wire   [10:0] shl_ln_fu_156_p3;
wire   [10:0] r_V_fu_164_p2;
wire   [8:0] shl_ln1273_5_fu_180_p3;
wire  signed [10:0] sext_ln1273_fu_188_p1;
wire   [10:0] r_V_3_fu_192_p2;
wire  signed [7:0] sext_ln1273_2_fu_208_p0;
wire  signed [7:0] shl_ln1273_6_fu_212_p1;
wire   [10:0] shl_ln1273_6_fu_212_p3;
wire  signed [10:0] sext_ln1273_2_fu_208_p1;
wire   [10:0] r_V_4_fu_220_p2;
wire  signed [7:0] trunc_ln1273_fu_241_p0;
wire   [6:0] trunc_ln1273_fu_241_p1;
wire  signed [7:0] shl_ln1273_s_fu_253_p1;
wire   [9:0] shl_ln1273_s_fu_253_p3;
wire  signed [10:0] sext_ln1273_5_fu_261_p1;
wire   [10:0] shl_ln1273_9_fu_245_p3;
wire   [10:0] r_V_6_fu_265_p2;
wire  signed [7:0] sext_ln1273_7_fu_281_p0;
wire  signed [7:0] shl_ln1273_3_fu_285_p1;
wire   [10:0] shl_ln1273_3_fu_285_p3;
wire   [10:0] r_V_9_fu_293_p2;
wire  signed [10:0] sext_ln1273_7_fu_281_p1;
wire   [10:0] r_V_10_fu_309_p2;
wire   [7:0] trunc_ln818_5_fu_198_p4;
wire   [7:0] trunc_ln818_6_fu_226_p4;
wire   [7:0] trunc_ln_fu_170_p4;
wire   [7:0] trunc_ln818_9_fu_271_p4;
wire   [7:0] trunc_ln818_2_fu_299_p4;
wire  signed [7:0] add_ln813_11_fu_343_p1;
wire   [7:0] trunc_ln818_3_fu_315_p4;
wire   [10:0] shl_ln1273_7_fu_355_p3;
wire   [8:0] shl_ln1273_8_fu_368_p3;
wire   [10:0] sub_ln1273_fu_362_p2;
wire  signed [10:0] sext_ln1273_3_fu_375_p1;
wire   [10:0] r_V_5_fu_379_p2;
wire   [8:0] shl_ln1273_2_fu_405_p3;
wire   [10:0] shl_ln1273_1_fu_398_p3;
wire  signed [10:0] sext_ln1273_6_fu_412_p1;
wire   [10:0] r_V_7_fu_416_p2;
wire  signed [10:0] sext_ln1273_4_fu_395_p1;
wire   [10:0] r_V_8_fu_432_p2;
wire   [7:0] trunc_ln818_s_fu_422_p4;
wire   [7:0] trunc_ln818_1_fu_438_p4;
wire   [10:0] grp_fu_97_p2;
wire   [7:0] add_ln813_5_fu_486_p2;
reg    grp_fu_97_ce;
reg    ap_ce_reg;
reg   [7:0] p_read_int_reg;
reg   [7:0] p_read1_int_reg;
reg  signed [7:0] p_read2_int_reg;
reg   [7:0] p_read3_int_reg;
reg   [7:0] p_read4_int_reg;
reg   [7:0] ap_return_0_int_reg;
reg   [7:0] ap_return_1_int_reg;
reg   [7:0] ap_return_2_int_reg;
reg   [7:0] ap_return_3_int_reg;

myproject_mul_8s_5s_11_3_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_8s_5s_11_3_0_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read2_int_reg),
    .din1(grp_fu_97_p1),
    .ce(grp_fu_97_ce),
    .dout(grp_fu_97_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln813_10_reg_564 <= add_ln813_10_fu_454_p2;
        add_ln813_10_reg_564_pp0_iter2_reg <= add_ln813_10_reg_564;
        add_ln813_10_reg_564_pp0_iter3_reg <= add_ln813_10_reg_564_pp0_iter2_reg;
        add_ln813_11_reg_544 <= add_ln813_11_fu_343_p2;
        add_ln813_11_reg_544_pp0_iter1_reg <= add_ln813_11_reg_544;
        add_ln813_12_reg_549 <= add_ln813_12_fu_349_p2;
        add_ln813_13_reg_569 <= add_ln813_13_fu_458_p2;
        add_ln813_14_reg_584 <= add_ln813_14_fu_477_p2;
        add_ln813_14_reg_584_pp0_iter3_reg <= add_ln813_14_reg_584;
        add_ln813_4_reg_589 <= add_ln813_4_fu_481_p2;
        add_ln813_6_reg_559 <= add_ln813_6_fu_448_p2;
        add_ln813_7_reg_579 <= add_ln813_7_fu_473_p2;
        add_ln813_7_reg_579_pp0_iter3_reg <= add_ln813_7_reg_579;
        add_ln813_8_reg_534 <= add_ln813_8_fu_331_p2;
        add_ln813_9_reg_539 <= add_ln813_9_fu_337_p2;
        add_ln813_reg_529 <= add_ln813_fu_325_p2;
        add_ln813_reg_529_pp0_iter1_reg <= add_ln813_reg_529;
        add_ln813_reg_529_pp0_iter2_reg <= add_ln813_reg_529_pp0_iter1_reg;
        add_ln813_reg_529_pp0_iter3_reg <= add_ln813_reg_529_pp0_iter2_reg;
        p_read27_reg_518 <= p_read2_int_reg;
        p_read_8_reg_511 <= p_read3_int_reg;
        trunc_ln818_7_reg_554 <= {{r_V_5_fu_379_p2[10:3]}};
        trunc_ln818_8_reg_574 <= {{grp_fu_97_p2[10:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= add_ln813_10_reg_564_pp0_iter3_reg;
        ap_return_1_int_reg <= add_ln813_7_reg_579_pp0_iter3_reg;
        ap_return_2_int_reg <= add_ln813_14_reg_584_pp0_iter3_reg;
        ap_return_3_int_reg <= add_ln813_5_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read_int_reg <= p_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = add_ln813_10_reg_564_pp0_iter3_reg;
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = add_ln813_7_reg_579_pp0_iter3_reg;
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = add_ln813_14_reg_584_pp0_iter3_reg;
    end else begin
        ap_return_2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = add_ln813_5_fu_486_p2;
    end else begin
        ap_return_3 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_97_ce = 1'b1;
    end else begin
        grp_fu_97_ce = 1'b0;
    end
end

assign add_ln813_10_fu_454_p2 = (add_ln813_9_reg_539 + add_ln813_8_reg_534);

assign add_ln813_11_fu_343_p1 = p_read1_int_reg;

assign add_ln813_11_fu_343_p2 = ($signed(p_read_int_reg) + $signed(add_ln813_11_fu_343_p1));

assign add_ln813_12_fu_349_p2 = ($signed(trunc_ln818_3_fu_315_p4) + $signed(8'd246));

assign add_ln813_13_fu_458_p2 = (add_ln813_12_reg_549 + trunc_ln818_1_fu_438_p4);

assign add_ln813_14_fu_477_p2 = (add_ln813_13_reg_569 + add_ln813_11_reg_544_pp0_iter1_reg);

assign add_ln813_4_fu_481_p2 = ($signed(trunc_ln818_8_reg_574) + $signed(8'd246));

assign add_ln813_5_fu_486_p2 = (add_ln813_4_reg_589 + add_ln813_reg_529_pp0_iter3_reg);

assign add_ln813_6_fu_448_p2 = ($signed(trunc_ln818_s_fu_422_p4) + $signed(8'd246));

assign add_ln813_7_fu_473_p2 = (add_ln813_6_reg_559 + trunc_ln818_7_reg_554);

assign add_ln813_8_fu_331_p2 = (trunc_ln_fu_170_p4 + trunc_ln818_9_fu_271_p4);

assign add_ln813_9_fu_337_p2 = (trunc_ln818_2_fu_299_p4 + 8'd10);

assign add_ln813_fu_325_p2 = (trunc_ln818_5_fu_198_p4 + trunc_ln818_6_fu_226_p4);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign grp_fu_97_p1 = 11'd2035;

assign r_V_10_fu_309_p2 = ($signed(shl_ln1273_3_fu_285_p3) + $signed(sext_ln1273_7_fu_281_p1));

assign r_V_3_fu_192_p2 = ($signed(shl_ln_fu_156_p3) + $signed(sext_ln1273_fu_188_p1));

assign r_V_4_fu_220_p2 = ($signed(shl_ln1273_6_fu_212_p3) + $signed(sext_ln1273_2_fu_208_p1));

assign r_V_5_fu_379_p2 = ($signed(sub_ln1273_fu_362_p2) - $signed(sext_ln1273_3_fu_375_p1));

assign r_V_6_fu_265_p2 = ($signed(sext_ln1273_5_fu_261_p1) - $signed(shl_ln1273_9_fu_245_p3));

assign r_V_7_fu_416_p2 = ($signed(shl_ln1273_1_fu_398_p3) + $signed(sext_ln1273_6_fu_412_p1));

assign r_V_8_fu_432_p2 = ($signed(shl_ln1273_1_fu_398_p3) + $signed(sext_ln1273_4_fu_395_p1));

assign r_V_9_fu_293_p2 = (11'd0 - shl_ln1273_3_fu_285_p3);

assign r_V_fu_164_p2 = (11'd0 - shl_ln_fu_156_p3);

assign sext_ln1273_2_fu_208_p0 = p_read1_int_reg;

assign sext_ln1273_2_fu_208_p1 = sext_ln1273_2_fu_208_p0;

assign sext_ln1273_3_fu_375_p1 = $signed(shl_ln1273_8_fu_368_p3);

assign sext_ln1273_4_fu_395_p1 = p_read_8_reg_511;

assign sext_ln1273_5_fu_261_p1 = $signed(shl_ln1273_s_fu_253_p3);

assign sext_ln1273_6_fu_412_p1 = $signed(shl_ln1273_2_fu_405_p3);

assign sext_ln1273_7_fu_281_p0 = p_read4_int_reg;

assign sext_ln1273_7_fu_281_p1 = sext_ln1273_7_fu_281_p0;

assign sext_ln1273_fu_188_p1 = $signed(shl_ln1273_5_fu_180_p3);

assign shl_ln1273_1_fu_398_p3 = {{p_read_8_reg_511}, {3'd0}};

assign shl_ln1273_2_fu_405_p3 = {{p_read_8_reg_511}, {1'd0}};

assign shl_ln1273_3_fu_285_p1 = p_read4_int_reg;

assign shl_ln1273_3_fu_285_p3 = {{shl_ln1273_3_fu_285_p1}, {3'd0}};

assign shl_ln1273_5_fu_180_p3 = {{p_read_int_reg}, {1'd0}};

assign shl_ln1273_6_fu_212_p1 = p_read1_int_reg;

assign shl_ln1273_6_fu_212_p3 = {{shl_ln1273_6_fu_212_p1}, {3'd0}};

assign shl_ln1273_7_fu_355_p3 = {{p_read27_reg_518}, {3'd0}};

assign shl_ln1273_8_fu_368_p3 = {{p_read27_reg_518}, {1'd0}};

assign shl_ln1273_9_fu_245_p3 = {{trunc_ln1273_fu_241_p1}, {4'd0}};

assign shl_ln1273_s_fu_253_p1 = p_read3_int_reg;

assign shl_ln1273_s_fu_253_p3 = {{shl_ln1273_s_fu_253_p1}, {2'd0}};

assign shl_ln_fu_156_p3 = {{p_read_int_reg}, {3'd0}};

assign sub_ln1273_fu_362_p2 = (11'd0 - shl_ln1273_7_fu_355_p3);

assign trunc_ln1273_fu_241_p0 = p_read3_int_reg;

assign trunc_ln1273_fu_241_p1 = trunc_ln1273_fu_241_p0[6:0];

assign trunc_ln818_1_fu_438_p4 = {{r_V_8_fu_432_p2[10:3]}};

assign trunc_ln818_2_fu_299_p4 = {{r_V_9_fu_293_p2[10:3]}};

assign trunc_ln818_3_fu_315_p4 = {{r_V_10_fu_309_p2[10:3]}};

assign trunc_ln818_5_fu_198_p4 = {{r_V_3_fu_192_p2[10:3]}};

assign trunc_ln818_6_fu_226_p4 = {{r_V_4_fu_220_p2[10:3]}};

assign trunc_ln818_9_fu_271_p4 = {{r_V_6_fu_265_p2[10:3]}};

assign trunc_ln818_s_fu_422_p4 = {{r_V_7_fu_416_p2[10:3]}};

assign trunc_ln_fu_170_p4 = {{r_V_fu_164_p2[10:3]}};

endmodule //myproject_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config5_s
