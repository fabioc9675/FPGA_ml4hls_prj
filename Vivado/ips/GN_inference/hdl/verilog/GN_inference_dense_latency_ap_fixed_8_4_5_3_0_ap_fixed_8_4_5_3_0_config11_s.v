// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GN_inference_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config11_s (
        ap_ready,
        p_read,
        p_read1,
        ap_return
);


output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
output  [7:0] ap_return;

wire   [6:0] trunc_ln1273_fu_56_p1;
wire   [9:0] shl_ln1273_s_fu_68_p3;
wire   [10:0] shl_ln_fu_60_p3;
wire  signed [10:0] sext_ln1273_fu_76_p1;
wire   [10:0] r_V_fu_80_p2;
wire   [8:0] shl_ln1273_5_fu_104_p3;
wire   [10:0] shl_ln1273_4_fu_96_p3;
wire  signed [10:0] sext_ln1273_8_fu_112_p1;
wire   [10:0] r_V_11_fu_116_p2;
wire   [7:0] trunc_ln818_s_fu_122_p4;
wire   [7:0] add_ln813_fu_132_p2;
wire   [7:0] trunc_ln_fu_86_p4;

assign add_ln813_fu_132_p2 = ($signed(trunc_ln818_s_fu_122_p4) + $signed(8'd250));

assign ap_ready = 1'b1;

assign r_V_11_fu_116_p2 = ($signed(shl_ln1273_4_fu_96_p3) + $signed(sext_ln1273_8_fu_112_p1));

assign r_V_fu_80_p2 = ($signed(shl_ln_fu_60_p3) - $signed(sext_ln1273_fu_76_p1));

assign sext_ln1273_8_fu_112_p1 = $signed(shl_ln1273_5_fu_104_p3);

assign sext_ln1273_fu_76_p1 = $signed(shl_ln1273_s_fu_68_p3);

assign shl_ln1273_4_fu_96_p3 = {{p_read1}, {3'd0}};

assign shl_ln1273_5_fu_104_p3 = {{p_read1}, {1'd0}};

assign shl_ln1273_s_fu_68_p3 = {{p_read}, {2'd0}};

assign shl_ln_fu_60_p3 = {{trunc_ln1273_fu_56_p1}, {4'd0}};

assign trunc_ln1273_fu_56_p1 = p_read[6:0];

assign trunc_ln818_s_fu_122_p4 = {{r_V_11_fu_116_p2[10:3]}};

assign trunc_ln_fu_86_p4 = {{r_V_fu_80_p2[10:3]}};

assign ap_return = (add_ln813_fu_132_p2 + trunc_ln_fu_86_p4);

endmodule //GN_inference_dense_latency_ap_fixed_8_4_5_3_0_ap_fixed_8_4_5_3_0_config11_s
